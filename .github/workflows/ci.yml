name: Main CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  IS_MAIN_BRANCH: ${{ github.ref == 'refs/heads/main' }}
  IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}

jobs:
  main:
    name: Nx Cloud - Main Job
    uses: nrwl/ci/.github/workflows/nx-cloud-main.yml@v0.2
    with:
      parallel-commands: |
        yarn nx-cloud record -- yarn nx workspace-lint
        yarn nx-cloud record -- yarn nx format:check
      parallel-commands-on-agents: |
        yarn nx affected --target=lint --parallel=3
        yarn nx affected --target=test --parallel=3 --ci --code-coverage
        yarn nx affected --target=build --parallel=3

  agents:
    name: Nx Cloud - Agents
    uses: nrwl/ci/.github/workflows/nx-cloud-agents.yml@v0.2
    with:
      number-of-agents: 3

  build:
    if: ${{env.IS_PULL_REQUEST == 'true'}}
    runs-on: ubuntu-20.04
    needs: [main]

    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout PPS code
        uses: actions/checkout@v2.4.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.5.1
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --frozen-lockfile
      - run: yarn nx affected --target=build --parallel=3
      - name: Upload build artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ secrets.PPS_ARTIFACT }}
          path: dist
          if-no-files-found: error
          retention-days: 1

  # deploy:
  #   name: Deploy
  #   runs-on: ubuntu-20.04
  #   needs: [main]

  #   steps:
  #     - name: Echo
  #       if: ${{env.IS_PULL_REQUEST == 'true'}}
  #       run: |
  #         echo 'hello deploy'
  #         ls ./dist/apps
